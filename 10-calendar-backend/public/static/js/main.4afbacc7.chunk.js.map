{"version":3,"sources":["Nav.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","Nav","classes","useState","selectedItem","setSelectedItem","handleClick","url","split","navigateToUrl","className","CssBaseline","AppBar","position","Toolbar","Typography","variant","noWrap","Drawer","paper","List","ListItem","button","onClick","selected","ListItemText","primary","id","App","Fragment","ReactDOM","render","StrictMode","document","getElementById","registerApplication","name","app","window","System","import","activeWhen","start"],"mappings":"wSAcMA,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFC,QAAS,QAEbC,OAAQ,CACJC,OAAQL,EAAMK,OAAOC,OAAS,GAElCA,OAAQ,CACJC,MAXQ,IAYRC,WAAY,GAEhBC,YAAa,CACTF,MAfQ,KAiBZG,gBAAiB,CACbC,SAAU,QAEdC,QAAS,CACLC,SAAU,EACVC,QAASd,EAAMe,QAAQ,SAKpB,SAASC,IACpB,IAAMC,EAAUnB,IADU,EAEcoB,mBAAiB,QAF/B,mBAEnBC,EAFmB,KAELC,EAFK,KAIpBC,EAAc,SAACC,GACjBF,EAAgBE,EAAIC,MAAM,KAAK,IAE/BC,YAAcF,IAGlB,OACI,yBAAKG,UAAWR,EAAQf,MACpB,kBAACwB,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQC,SAAS,QAAQH,UAAWR,EAAQb,QACxC,kBAACyB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,QAAM,GAA/B,4BAKR,kBAACC,EAAA,EAAD,CACIR,UAAWR,EAAQX,OACnByB,QAAQ,YACRd,QAAS,CACLiB,MAAOjB,EAAQR,cAGnB,kBAACoB,EAAA,EAAD,MACA,yBAAKJ,UAAWR,EAAQP,iBACpB,kBAACyB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAMjB,EAAY,aAAakB,SAA2B,YAAjBpB,GAC/D,kBAACqB,EAAA,EAAD,CAAcC,QAAQ,iBAE1B,kBAACL,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAMjB,EAAY,WAAWkB,SAA2B,UAAjBpB,GAC7D,kBAACqB,EAAA,EAAD,CAAcC,QAAQ,kBAKtC,0BAAMhB,UAAWR,EAAQL,SACrB,kBAACiB,EAAA,EAAD,MACA,yBAAKa,GAAG,uCACR,yBAAKA,GAAG,uCCtETC,MARf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC5B,EAAD,QCDN6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAG1BC,YAAoB,CAClBC,KAAM,cACNC,IAAK,kBAA4BC,OAAeC,OAAOC,OAAO,kCAC9DC,WAAY,aAGdN,YAAoB,CAClBC,KAAM,YACNC,IAAK,kBAA4BC,OAAeC,OAAOC,OAAO,+BAC9DC,WAAY,WAGdC,gB","file":"static/js/main.4afbacc7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { navigateToUrl } from \"single-spa\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        drawerContainer: {\n            overflow: 'auto',\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n    }),\n);\n\nexport default function Nav() {\n    const classes = useStyles();\n    const [selectedItem, setSelectedItem] = useState<string>(\"none\");\n\n    const handleClick = (url: string): void => {\n        setSelectedItem(url.split(\"/\")[1]);\n\n        navigateToUrl(url);\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" noWrap>\n                        Single-SPA Root Config\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <Toolbar />\n                <div className={classes.drawerContainer}>\n                    <List>\n                        <ListItem button onClick={() => handleClick('/angular')} selected={selectedItem === \"angular\"}>\n                            <ListItemText primary=\"App Angular\" />\n                        </ListItem>\n                        <ListItem button onClick={() => handleClick('/react')} selected={selectedItem === \"react\"}>\n                            <ListItemText primary=\"App React\" />\n                        </ListItem>\n                    </List>\n                </div>\n            </Drawer>\n            <main className={classes.content}>\n                <Toolbar />\n                <div id=\"single-spa-application:app-angular\"></div>\n                <div id=\"single-spa-application:app-react\"></div>\n            </main>\n        </div>\n    );\n}","import React from 'react';\nimport Nav from './Nav';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Nav />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { LifeCycles, registerApplication, start } from \"single-spa\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nregisterApplication({\n  name: \"app-angular\",\n  app: (): Promise<LifeCycles> => (window as any).System.import(\"http://localhost:4200/main.js\"),\n  activeWhen: \"/angular\"\n});\n\nregisterApplication({\n  name: \"app-react\",\n  app: (): Promise<LifeCycles> => (window as any).System.import(\"@single-spa-test/app-react\"),\n  activeWhen: \"/react\"\n});\n\nstart();\n"],"sourceRoot":""}